{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/extract-data-from-vehicle-license.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for extracting data from a vehicle license image using OCR and a large language model.\n *\n * - extractDataFromVehicleLicense - A function that accepts an image of a vehicle license and returns the extracted data.\n * - ExtractDataFromVehicleLicenseInput - The input type for the extractDataFromVehicleLicense function, which is a data URI of the image.\n * - ExtractDataFromVehicleLicenseOutput - The output type for the extractDataFromVehicleLicense function, which includes saseNo, marka, tipOnayNo, varyant, and versiyon.\n */\n\nimport {ai} from '@/ai/ai-instance';\nimport {z} from 'genkit';\n\nconst ExtractDataFromVehicleLicenseInputSchema = z.object({\n  licenseImageDataUri: z\n    .string()\n    .describe(\n      'A photo of a vehicle license or tag, as a data URI that must include a MIME type and use Base64 encoding. Expected format: \\'data:<mimetype>;base64,<encoded_data>\\'.'\n    ),\n});\n\nexport type ExtractDataFromVehicleLicenseInput = z.infer<typeof ExtractDataFromVehicleLicenseInputSchema>;\n\nconst ExtractDataFromVehicleLicenseOutputSchema = z.object({\n  saseNo: z.string().optional().describe('Şase Numarası (VIN)'), // New field\n  marka: z.string().optional().describe('Marka'), // Kept field\n  tipOnayNo: z.string().optional().describe('Tip Onay Numarası'), // New field\n  varyant: z.string().optional().describe('Varyant'), // New field\n  versiyon: z.string().optional().describe('Versiyon'), // New field\n});\n\nexport type ExtractDataFromVehicleLicenseOutput = z.infer<typeof ExtractDataFromVehicleLicenseOutputSchema>;\n\n// This function serves as the public API for the flow\nexport async function extractDataFromVehicleLicense(\n  input: ExtractDataFromVehicleLicenseInput\n): Promise<ExtractDataFromVehicleLicenseOutput> {\n  return extractDataFromVehicleLicenseFlow(input);\n}\n\n// Define the prompt for the AI model\nconst prompt = ai.definePrompt({\n  name: 'extractDataFromVehicleLicensePrompt',\n  input: {\n    schema: ExtractDataFromVehicleLicenseInputSchema, // Use the same input schema\n  },\n  output: {\n    schema: ExtractDataFromVehicleLicenseOutputSchema, // Use the updated output schema\n  },\n  prompt: `Aşağıdaki araç ruhsatı veya etiketi görselinden şu bilgileri çıkar: Şase Numarası, Marka, Tip Onay Numarası, Varyant, Versiyon. Eğer bir bilgi bulunamazsa boş bırak veya null olarak döndür.\n\n   Araç Görseli: {{media url=licenseImageDataUri}}\n  `,\n});\n\n// Define the Genkit flow\nconst extractDataFromVehicleLicenseFlow = ai.defineFlow<\n  typeof ExtractDataFromVehicleLicenseInputSchema,\n  typeof ExtractDataFromVehicleLicenseOutputSchema\n>({\n  name: 'extractDataFromVehicleLicenseFlow',\n  inputSchema: ExtractDataFromVehicleLicenseInputSchema,\n  outputSchema: ExtractDataFromVehicleLicenseOutputSchema,\n},\nasync input => {\n  // Directly generate the response using the defined prompt and the input image\n  // Genkit 1.x: Call the prompt function directly with the input\n  const response = await prompt(input);\n\n\n  // Genkit 1.x: Access the output property directly\n  return response.output || { // Provide default empty object if output is null/undefined\n      saseNo: '',\n      marka: '',\n      tipOnayNo: '',\n      varyant: '',\n      versiyon: '',\n    };\n});\n"],"names":[],"mappings":";;;;;IAkCsB","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport type {ChangeEvent} from 'react';\nimport React, {useState, useCallback, useEffect, useRef} from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport {Button} from '@/components/ui/button';\nimport {Input} from '@/components/ui/input';\nimport {Label} from '@/components/ui/label';\nimport {Camera, CheckCircle, XCircle, Loader2, ScanLine, Search} from 'lucide-react'; // Added Search icon\nimport {\n  extractDataFromVehicleLicense,\n  type ExtractDataFromVehicleLicenseOutput,\n} from '@/ai/flows/extract-data-from-vehicle-license';\nimport {useToast} from '@/hooks/use-toast';\nimport Image from 'next/image';\n\n// Updated FormData interface to match new fields\ninterface FormData extends ExtractDataFromVehicleLicenseOutput {\n  [key: string]: string | undefined; // Allow undefined for optional fields\n}\n\n// Updated initial form data\nconst initialFormData: FormData = {\n  saseNo: '',\n  marka: '',\n  tipOnayNo: '',\n  varyant: '',\n  versiyon: '',\n};\n\n// Updated sample data for comparison\nconst secondPageData: FormData = {\n  saseNo: 'VIN1234567890ABCDE', // Sample VIN\n  marka: 'Volkswagen',\n  tipOnayNo: 'e1*2007/46*0515*10', // Sample Type Approval No\n  varyant: 'AUV', // Sample Variant\n  versiyon: 'AUSAX/FM6FM6', // Sample Version\n};\n\ntype ComparisonResult = 'uygun' | 'uygun değil' | 'bekleniyor';\n\nexport default function Home() {\n  const [formData, setFormData] = useState<FormData>(initialFormData);\n  const [isScanning, setIsScanning] = useState(false);\n  const [scannedImage, setScannedImage] = useState<string | null>(null);\n  const [comparisonResult, setComparisonResult] =\n    useState<ComparisonResult>('bekleniyor');\n  const {toast} = useToast();\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const {id, value} = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [id]: value,\n    }));\n  };\n\n  // Updated handleImageUpload to only set the image, not scan automatically\n  const handleImageUpload = async (e: ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    // Reset relevant states when a new image is selected\n    setIsScanning(false); // Ensure scanning is false initially\n    setScannedImage(null);\n    setFormData(initialFormData);\n    setComparisonResult('bekleniyor');\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const base64Image = reader.result as string;\n      setScannedImage(base64Image); // Display the uploaded image\n       toast({\n          title: 'Görsel Yüklendi',\n          description: 'Görsel taramaya hazır. \"Görseli Tara\" butonuna tıklayın.',\n        });\n    };\n    reader.onerror = error => {\n      console.error('Error reading file:', error);\n      toast({\n        title: 'Dosya Okuma Hatası',\n        description: 'Görsel dosyası okunurken bir hata oluştu.',\n        variant: 'destructive',\n      });\n      setScannedImage(null); // Clear image on error\n      setFormData(initialFormData);\n      setComparisonResult('bekleniyor');\n    };\n     // Clear the file input value so the same file can be selected again\n    if (fileInputRef.current) {\n        fileInputRef.current.value = '';\n    }\n  };\n\n  // New function to handle manual scanning\n  const handleManualScan = async () => {\n    if (!scannedImage) {\n       toast({\n        title: 'Görsel Yok',\n        description: 'Lütfen önce taramak için bir görsel yükleyin.',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    setIsScanning(true);\n    setFormData(initialFormData); // Reset form data before scanning\n    setComparisonResult('bekleniyor'); // Reset comparison\n\n    try {\n      const result = await extractDataFromVehicleLicense({\n        licenseImageDataUri: scannedImage,\n      });\n      // Update formData with extracted data, ensuring empty strings for undefined fields\n      setFormData(prevData => ({\n        ...prevData,\n        saseNo: result.saseNo || '',\n        marka: result.marka || '',\n        tipOnayNo: result.tipOnayNo || '',\n        varyant: result.varyant || '',\n        versiyon: result.versiyon || '',\n      }));\n      toast({\n        title: 'Tarama Başarılı',\n        description: 'Araç verileri başarıyla okundu.',\n      });\n    } catch (error) {\n      console.error('Error extracting data:', error);\n      toast({\n        title: 'Tarama Hatası',\n        description: 'Araç verileri okunurken bir hata oluştu.',\n        variant: 'destructive',\n      });\n      setFormData(initialFormData); // Clear form on error\n    } finally {\n      setIsScanning(false);\n    }\n  };\n\n\n  const triggerFileInput = () => {\n    fileInputRef.current?.click();\n  };\n\n  const compareData = useCallback(() => {\n    const scanned = {\n      saseNo: formData.saseNo,\n      marka: formData.marka,\n      tipOnayNo: formData.tipOnayNo,\n      varyant: formData.varyant,\n      versiyon: formData.versiyon,\n    };\n\n    const hasScannedData = Object.values(scanned).some(val => val && String(val).trim() !== '');\n\n\n    if (!hasScannedData || isScanning) { // Also check isScanning to avoid intermediate comparison state\n        setComparisonResult('bekleniyor');\n        return;\n    }\n\n    // Compare against updated secondPageData fields\n    const isMatch =\n      scanned.saseNo === secondPageData.saseNo &&\n      scanned.marka === secondPageData.marka &&\n      scanned.tipOnayNo === secondPageData.tipOnayNo &&\n      scanned.varyant === secondPageData.varyant &&\n      scanned.versiyon === secondPageData.versiyon;\n\n    setComparisonResult(isMatch ? 'uygun' : 'uygun değil');\n  }, [formData, isScanning]); // Add isScanning dependency\n\n  useEffect(() => {\n    compareData();\n  }, [formData, compareData]); // Removed isScanning from here as it's handled in compareData\n\n  const getResultIcon = () => {\n    switch (comparisonResult) {\n      case 'uygun':\n        return <CheckCircle className=\"h-6 w-6 text-green-500\" />;\n      case 'uygun değil':\n        return <XCircle className=\"h-6 w-6 text-red-500\" />;\n      default:\n        // Show loader only if actively scanning, otherwise show nothing or a placeholder\n        return isScanning ? <Loader2 className=\"h-6 w-6 animate-spin text-muted-foreground\" /> : <ScanLine className=\"h-6 w-6 text-muted-foreground opacity-50\"/>;\n    }\n  };\n\n  const getResultText = () => {\n     if (isScanning) return 'Karşılaştırılıyor...'; // Show loading text during scan\n    switch (comparisonResult) {\n      case 'uygun':\n        return 'Uygun';\n      case 'uygun değil':\n        return 'Uygun Değil';\n      default:\n        return 'Karşılaştırma Bekleniyor';\n    }\n  };\n\n   const getResultColor = () => {\n    if (isScanning) return 'text-muted-foreground'; // Muted color during scan\n    switch (comparisonResult) {\n      case 'uygun':\n        return 'text-green-600';\n      case 'uygun değil':\n        return 'text-red-600';\n      default:\n        return 'text-muted-foreground';\n    }\n  };\n\n\n  return (\n    <div className=\"flex min-h-screen items-center justify-center bg-gradient-to-br from-background to-secondary p-4 sm:p-8\">\n      <Card className=\"w-full max-w-3xl shadow-xl\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl font-bold text-center text-primary\">\n            Araç Ruhsat/Etiket Tarayıcı\n          </CardTitle>\n          <CardDescription className=\"text-center text-muted-foreground\">\n            Araç ruhsatı veya etiketinin fotoğrafını yükleyerek bilgileri\n            otomatik doldurun ve sistem verileriyle karşılaştırın.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          {/* Scan Section */}\n          <div className=\"space-y-2\"> {/* Reduced space */}\n            <h3 className=\"text-lg font-semibold text-foreground mb-2 border-b pb-2\">Tarama Alanı</h3>\n             <div className=\"relative aspect-video w-full bg-muted rounded-md overflow-hidden border border-dashed flex items-center justify-center\">\n              {isScanning ? (\n                <div className=\"flex flex-col items-center text-muted-foreground\">\n                  <Loader2 className=\"h-12 w-12 animate-spin mb-2\" />\n                  <p>Taranıyor...</p>\n                </div>\n              ) : scannedImage ? (\n                 <Image\n                  src={scannedImage}\n                  alt=\"Taranan Ruhsat/Etiket\"\n                  layout=\"fill\"\n                  objectFit=\"contain\"\n                  data-ai-hint=\"vehicle identification plate license\"\n                />\n              ) : (\n                <div className=\"flex flex-col items-center text-muted-foreground p-4 text-center\">\n                  <ScanLine className=\"h-12 w-12 mb-2\" />\n                   <p>Ruhsat veya etiket görselini yükleyin.</p>\n                </div>\n              )}\n            </div>\n             {/* Combined Button Row */}\n             <div className=\"flex flex-col sm:flex-row gap-2\">\n              <Button\n                onClick={triggerFileInput}\n                disabled={isScanning}\n                className=\"flex-1 bg-primary hover:bg-primary/90 text-primary-foreground\"\n              >\n                <Camera className=\"mr-2 h-4 w-4\" />\n                Görsel Seç/Değiştir\n              </Button>\n              <Button\n                onClick={handleManualScan}\n                disabled={isScanning || !scannedImage}\n                variant=\"secondary\" // Use secondary variant for distinction\n                className=\"flex-1\"\n              >\n                {isScanning ? (\n                   <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                ) : (\n                  <Search className=\"mr-2 h-4 w-4\" /> // Using Search icon\n                )}\n                {isScanning ? 'Taranıyor...' : 'Görseli Tara'}\n              </Button>\n            </div>\n            <Input\n              ref={fileInputRef}\n              type=\"file\"\n              accept=\"image/*\"\n              onChange={handleImageUpload}\n              className=\"hidden\"\n              id=\"license-scan\"\n            />\n          </div>\n\n          {/* Data Fields Section - Updated Fields */}\n          <div className=\"space-y-4\">\n             <h3 className=\"text-lg font-semibold text-foreground mb-2 border-b pb-2\">Araç Bilgileri</h3>\n            <div className=\"space-y-3\">\n               <div>\n                <Label htmlFor=\"saseNo\" className=\"text-sm font-medium text-foreground\">Şase Numarası</Label>\n                <Input\n                  id=\"saseNo\"\n                  value={formData.saseNo || ''} // Handle potential undefined\n                  onChange={handleInputChange}\n                  placeholder=\"-\"\n                  readOnly={isScanning}\n                   className=\"mt-1 bg-white read-only:bg-muted/50 read-only:cursor-not-allowed\"\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"marka\" className=\"text-sm font-medium text-foreground\">Marka</Label>\n                <Input\n                  id=\"marka\"\n                  value={formData.marka || ''} // Handle potential undefined\n                  onChange={handleInputChange}\n                  placeholder=\"-\"\n                  readOnly={isScanning}\n                   className=\"mt-1 bg-white read-only:bg-muted/50 read-only:cursor-not-allowed\"\n                />\n              </div>\n               <div>\n                <Label htmlFor=\"tipOnayNo\" className=\"text-sm font-medium text-foreground\">Tip Onay No</Label>\n                <Input\n                  id=\"tipOnayNo\"\n                  value={formData.tipOnayNo || ''} // Handle potential undefined\n                  onChange={handleInputChange}\n                  placeholder=\"-\"\n                  readOnly={isScanning}\n                   className=\"mt-1 bg-white read-only:bg-muted/50 read-only:cursor-not-allowed\"\n                />\n              </div>\n              <div>\n                <Label htmlFor=\"varyant\" className=\"text-sm font-medium text-foreground\">Varyant</Label>\n                <Input\n                  id=\"varyant\"\n                  value={formData.varyant || ''} // Handle potential undefined\n                  onChange={handleInputChange}\n                  placeholder=\"-\"\n                  readOnly={isScanning}\n                  className=\"mt-1 bg-white read-only:bg-muted/50 read-only:cursor-not-allowed\"\n                />\n              </div>\n               <div>\n                <Label htmlFor=\"versiyon\" className=\"text-sm font-medium text-foreground\">Versiyon</Label>\n                <Input\n                  id=\"versiyon\"\n                  value={formData.versiyon || ''} // Handle potential undefined\n                  onChange={handleInputChange}\n                  placeholder=\"-\"\n                  readOnly={isScanning}\n                  className=\"mt-1 bg-white read-only:bg-muted/50 read-only:cursor-not-allowed\"\n                />\n              </div>\n            </div>\n             <div className=\"mt-6 pt-4 border-t\">\n                <h3 className=\"text-lg font-semibold text-foreground mb-3\">Karşılaştırma Sonucu</h3>\n                 <div className={`flex items-center gap-3 p-3 rounded-md border ${\n                    isScanning ? 'border-muted bg-muted/50' : // Style for loading state\n                    comparisonResult === 'uygun' ? 'border-green-200 bg-green-50' :\n                    comparisonResult === 'uygun değil' ? 'border-red-200 bg-red-50' :\n                    'border-muted bg-muted/50' // Default/Bekleniyor state\n                 }`}>\n                    {getResultIcon()}\n                    <span className={`text-lg font-medium ${getResultColor()}`}>{getResultText()}</span>\n                </div>\n                 {/* Conditional Hints */}\n                 <p className=\"text-xs text-muted-foreground mt-2\">\n                    {!scannedImage && !isScanning && \"Karşılaştırma için önce bir görsel seçin ve tarayın.\"}\n                    {scannedImage && !formData.saseNo && !isScanning && \"Görsel seçildi. Taramak için 'Görseli Tara' butonuna basın.\"}\n                    {isScanning && \"Taranan veriler sistemdekiyle karşılaştırılıyor...\"}\n                    {comparisonResult !== 'bekleniyor' && !isScanning && \"Taranan araç bilgileri sistemdeki verilerle karşılaştırıldı.\"}\n                 </p>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}
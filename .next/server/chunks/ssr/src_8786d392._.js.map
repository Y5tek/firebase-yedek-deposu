{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/extract-data-from-vehicle-license.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for extracting data from a vehicle license or tag image using OCR and a large language model.\n *\n * - extractDataFromVehicleLicense - A function that accepts an image of a vehicle license/tag and returns the extracted data.\n * - ExtractDataFromVehicleLicenseInput - The input type for the extractDataFromVehicleLicense function, which is a data URI of the image.\n * - ExtractDataFromVehicleLicenseOutput - The output type for the extractDataFromVehicleLicense function, including saseNo, marka, tipOnayNo, varyant, and versiyon.\n */\n\nimport {ai} from '@/ai/ai-instance';\nimport {z} from 'genkit';\n\nconst ExtractDataFromVehicleLicenseInputSchema = z.object({\n  licenseImageDataUri: z\n    .string()\n    .describe(\n      'A photo of a vehicle license or tag, as a data URI that must include a MIME type and use Base64 encoding. Expected format: \\'data:<mimetype>;base64,<encoded_data>\\'.'\n    ),\n});\n\nexport type ExtractDataFromVehicleLicenseInput = z.infer<typeof ExtractDataFromVehicleLicenseInputSchema>;\n\n// Output schema remains the same, containing all possible fields.\nconst ExtractDataFromVehicleLicenseOutputSchema = z.object({\n  saseNo: z.string().optional().describe('Şase Numarası (VIN)'),\n  marka: z.string().optional().describe('Marka'),\n  tipOnayNo: z.string().optional().describe('Tip Onay Numarası'),\n  varyant: z.string().optional().describe('Varyant'),\n  versiyon: z.string().optional().describe('Versiyon'),\n});\n\nexport type ExtractDataFromVehicleLicenseOutput = z.infer<typeof ExtractDataFromVehicleLicenseOutputSchema>;\n\n// This function serves as the public API for the flow\nexport async function extractDataFromVehicleLicense(\n  input: ExtractDataFromVehicleLicenseInput\n): Promise<ExtractDataFromVehicleLicenseOutput> {\n  return extractDataFromVehicleLicenseFlow(input);\n}\n\n// Define the prompt for the AI model\n// The prompt asks for *all* fields, letting the model decide what's available in the image.\nconst prompt = ai.definePrompt({\n  name: 'extractDataFromVehicleLicensePrompt',\n  input: {\n    schema: ExtractDataFromVehicleLicenseInputSchema, // Use the same input schema\n  },\n  output: {\n    schema: ExtractDataFromVehicleLicenseOutputSchema, // Use the same output schema\n  },\n  prompt: `Aşağıdaki araç ruhsatı VEYA etiketi görselinden Şase Numarası, Marka, Tip Onay Numarası, Varyant ve Versiyon bilgilerini çıkar. Hangi bilginin hangi tür belgede (ruhsat/etiket) bulunduğunu dikkate almadan, görselde bulabildiğin tüm bu alanları doldur. Eğer bir bilgi görselde bulunmuyorsa ilgili alanı boş bırak veya null olarak döndür.\n\n   Araç Görseli: {{media url=licenseImageDataUri}}\n  `,\n});\n\n// Define the Genkit flow\nconst extractDataFromVehicleLicenseFlow = ai.defineFlow<\n  typeof ExtractDataFromVehicleLicenseInputSchema,\n  typeof ExtractDataFromVehicleLicenseOutputSchema\n>({\n  name: 'extractDataFromVehicleLicenseFlow',\n  inputSchema: ExtractDataFromVehicleLicenseInputSchema,\n  outputSchema: ExtractDataFromVehicleLicenseOutputSchema,\n},\nasync input => {\n  // Directly generate the response using the defined prompt and the input image\n  // Genkit 1.x: Call the prompt function directly with the input\n  const response = await prompt(input);\n\n\n  // Genkit 1.x: Access the output property directly\n  return response.output || { // Provide default empty object if output is null/undefined\n      saseNo: '',\n      marka: '',\n      tipOnayNo: '',\n      varyant: '',\n      versiyon: '',\n    };\n});\n"],"names":[],"mappings":";;;;;IAmCsB","debugId":null}},
    {"offset": {"line": 221, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,8OAAC,qKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,qKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\n'use client';\n\nimport type { ChangeEvent } from 'react';\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Camera, CheckCircle, XCircle, Loader2, ScanLine, Search } from 'lucide-react';\nimport {\n  extractDataFromVehicleLicense,\n  type ExtractDataFromVehicleLicenseOutput,\n} from '@/ai/flows/extract-data-from-vehicle-license';\nimport { useToast } from '@/hooks/use-toast';\nimport Image from 'next/image';\nimport { Separator } from '@/components/ui/separator'; // Import Separator\n\n// Interface for data from a single scan\ninterface ScanData extends ExtractDataFromVehicleLicenseOutput {\n  [key: string]: string | undefined;\n}\n\n// Updated FormData interface to hold data for two scans\ninterface FormData {\n  scan1: ScanData;\n  scan2: ScanData;\n}\n\n// Initial state for a single scan\nconst initialScanData: ScanData = {\n  saseNo: '',\n  marka: '',\n  tipOnayNo: '',\n  varyant: '',\n  versiyon: '',\n};\n\n// Updated initial form data for two scans\nconst initialFormData: FormData = {\n  scan1: { ...initialScanData },\n  scan2: { ...initialScanData },\n};\n\ntype ComparisonResult = 'uygun' | 'uygun değil' | 'bekleniyor' | 'eksik veri';\n\nexport default function Home() {\n  const [formData, setFormData] = useState<FormData>(initialFormData);\n  const [isScanning1, setIsScanning1] = useState(false);\n  const [isScanning2, setIsScanning2] = useState(false);\n  const [scannedImage1, setScannedImage1] = useState<string | null>(null);\n  const [scannedImage2, setScannedImage2] = useState<string | null>(null);\n  const [comparisonResult, setComparisonResult] =\n    useState<ComparisonResult>('bekleniyor');\n  const { toast } = useToast();\n  const fileInputRef1 = useRef<HTMLInputElement>(null);\n  const fileInputRef2 = useRef<HTMLInputElement>(null);\n\n  // Check if data exists for a given scan\n  const hasScanData = (scan: ScanData): boolean => {\n      // Check if at least one relevant field for comparison has data\n      return !!scan.saseNo || !!scan.marka || !!scan.tipOnayNo || !!scan.varyant || !!scan.versiyon;\n  }\n\n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>, scanIndex: 1 | 2) => {\n    const { id, value } = e.target;\n    const fieldName = id.replace(`-${scanIndex}`, ''); // Remove '-1' or '-2' suffix\n    setFormData(prevData => ({\n      ...prevData,\n      [`scan${scanIndex}`]: {\n        ...prevData[`scan${scanIndex}`],\n        [fieldName]: value,\n      },\n    }));\n  };\n\n  const handleImageUpload = async (e: ChangeEvent<HTMLInputElement>, scanIndex: 1 | 2) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    const setIsScanning = scanIndex === 1 ? setIsScanning1 : setIsScanning2;\n    const setScannedImage = scanIndex === 1 ? setScannedImage1 : setScannedImage2;\n    const fileInputRef = scanIndex === 1 ? fileInputRef1 : fileInputRef2;\n\n    // Reset relevant states for the specific scan area\n    setIsScanning(false);\n    setScannedImage(null);\n    setFormData(prevData => ({\n        ...prevData,\n        [`scan${scanIndex}`]: { ...initialScanData }\n    }));\n    setComparisonResult('bekleniyor'); // Reset comparison when a new image is uploaded\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const base64Image = reader.result as string;\n      setScannedImage(base64Image);\n      toast({\n        title: `Görsel ${scanIndex} Yüklendi`,\n        description: `Görsel taramaya hazır. \"Görsel ${scanIndex} Tara\" butonuna tıklayın.`,\n      });\n    };\n    reader.onerror = error => {\n      console.error('Error reading file:', error);\n      toast({\n        title: 'Dosya Okuma Hatası',\n        description: `Görsel ${scanIndex} dosyası okunurken bir hata oluştu.`,\n        variant: 'destructive',\n      });\n      setScannedImage(null);\n      setFormData(prevData => ({\n        ...prevData,\n        [`scan${scanIndex}`]: { ...initialScanData }\n      }));\n      setComparisonResult('bekleniyor');\n    };\n\n    // Clear the file input value\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  };\n\n  const handleManualScan = async (scanIndex: 1 | 2) => {\n    const scannedImage = scanIndex === 1 ? scannedImage1 : scannedImage2;\n    const setIsScanning = scanIndex === 1 ? setIsScanning1 : setIsScanning2;\n    const isScanning = scanIndex === 1 ? isScanning1 : isScanning2; // Get current scanning state\n\n    if (isScanning) return; // Prevent triggering scan if already scanning\n\n    if (!scannedImage) {\n      toast({\n        title: `Görsel ${scanIndex} Yok`,\n        description: `Lütfen önce taramak için ${scanIndex}. görseli yükleyin.`,\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    setIsScanning(true);\n    setFormData(prevData => ({\n        ...prevData,\n        [`scan${scanIndex}`]: { ...initialScanData } // Reset form data for this scan\n    }));\n    setComparisonResult('bekleniyor'); // Reset comparison during scan\n\n    try {\n      const result = await extractDataFromVehicleLicense({\n        licenseImageDataUri: scannedImage,\n      });\n\n      // Update the state with all extracted data,\n      // the UI will filter which fields to show\n      setFormData(prevData => ({\n        ...prevData,\n        [`scan${scanIndex}`]: {\n          saseNo: result.saseNo || '',\n          marka: result.marka || '',\n          tipOnayNo: result.tipOnayNo || '',\n          varyant: result.varyant || '',\n          versiyon: result.versiyon || '',\n        },\n      }));\n\n      toast({\n        title: `Tarama ${scanIndex} Başarılı`,\n        description: `Araç verileri ${scanIndex}. görselden başarıyla okundu.`,\n      });\n    } catch (error) {\n      console.error(`Error extracting data for scan ${scanIndex}:`, error);\n      toast({\n        title: `Tarama ${scanIndex} Hatası`,\n        description: `Araç verileri ${scanIndex}. görselden okunurken bir hata oluştu. Lütfen manuel kontrol edin.`,\n        variant: 'destructive',\n      });\n       setFormData(prevData => ({\n        ...prevData,\n        [`scan${scanIndex}`]: { ...initialScanData } // Clear form on error\n      }));\n    } finally {\n      setIsScanning(false);\n    }\n  };\n\n  const triggerFileInput = (scanIndex: 1 | 2) => {\n    const fileInputRef = scanIndex === 1 ? fileInputRef1 : fileInputRef2;\n    fileInputRef.current?.click();\n  };\n\n  const compareData = useCallback(() => {\n    const scan1Data = formData.scan1;\n    const scan2Data = formData.scan2;\n    const isScanning = isScanning1 || isScanning2;\n\n    // Check if we have the necessary data from *both* sources for comparison\n    // Ruhsat needs Sase + Marka, Etiket needs TipOnay + Varyant + Versiyon\n    // For a valid comparison, we need all these fields populated across the two scans.\n    const scan1ReadyForCompare = !!scan1Data.saseNo && !!scan1Data.marka;\n    const scan2ReadyForCompare = !!scan2Data.tipOnayNo && !!scan2Data.varyant && !!scan2Data.versiyon;\n    const allDataExtracted = hasScanData(scan1Data) && hasScanData(scan2Data);\n\n\n    if (isScanning) {\n        setComparisonResult('bekleniyor');\n        return;\n    }\n\n    // Check if *any* relevant data is missing from either scan after scanning is done\n    if (!allDataExtracted) {\n         // If scanning is finished but still no data, it's likely an extraction issue or user hasn't scanned yet.\n        setComparisonResult('eksik veri');\n        return;\n    }\n\n\n    // Compare all fields between scan1 and scan2\n    // Even if not all fields are displayed in each card, we compare the underlying extracted data.\n    const isMatch =\n      scan1Data.saseNo === scan2Data.saseNo &&\n      scan1Data.marka === scan2Data.marka &&\n      scan1Data.tipOnayNo === scan2Data.tipOnayNo &&\n      scan1Data.varyant === scan2Data.varyant &&\n      scan1Data.versiyon === scan2Data.versiyon;\n\n    setComparisonResult(isMatch ? 'uygun' : 'uygun değil');\n  }, [formData, isScanning1, isScanning2]);\n\n  useEffect(() => {\n    // Compare data whenever formData changes and scanning is not in progress\n     if (!isScanning1 && !isScanning2) {\n      compareData();\n    }\n  }, [formData, isScanning1, isScanning2, compareData]);\n\n\n  const getResultIcon = () => {\n    const isScanning = isScanning1 || isScanning2;\n     if (isScanning) return <Loader2 className=\"h-6 w-6 animate-spin text-muted-foreground\" />;\n\n    switch (comparisonResult) {\n      case 'uygun':\n        return <CheckCircle className=\"h-6 w-6 text-green-500\" />;\n      case 'uygun değil':\n        return <XCircle className=\"h-6 w-6 text-red-500\" />;\n       case 'eksik veri':\n         return <ScanLine className=\"h-6 w-6 text-yellow-500\" />; // Or another icon for missing data\n      default: // bekleniyor\n        return <ScanLine className=\"h-6 w-6 text-muted-foreground opacity-50\" />;\n    }\n  };\n\n  const getResultText = () => {\n     const isScanning = isScanning1 || isScanning2;\n     if (isScanning) return 'Karşılaştırılıyor...';\n\n    switch (comparisonResult) {\n      case 'uygun':\n        return 'Veriler Eşleşiyor';\n      case 'uygun değil':\n        return 'Veriler Eşleşmiyor';\n      case 'eksik veri':\n         return 'Eksik Veri';\n      default: // bekleniyor\n        return 'Karşılaştırma Bekleniyor';\n    }\n  };\n\n  const getResultColor = () => {\n     const isScanning = isScanning1 || isScanning2;\n     if (isScanning) return 'text-muted-foreground';\n\n    switch (comparisonResult) {\n      case 'uygun':\n        return 'text-green-600';\n      case 'uygun değil':\n        return 'text-red-600';\n       case 'eksik veri':\n         return 'text-yellow-600';\n      default: // bekleniyor\n        return 'text-muted-foreground';\n    }\n  };\n\n   const getResultBgColor = () => {\n    const isScanning = isScanning1 || isScanning2;\n     if (isScanning) return 'border-muted bg-muted/50';\n\n    switch (comparisonResult) {\n      case 'uygun':\n        return 'border-green-200 bg-green-50';\n      case 'uygun değil':\n        return 'border-red-200 bg-red-50';\n       case 'eksik veri':\n         return 'border-yellow-200 bg-yellow-50';\n      default: // bekleniyor\n        return 'border-muted bg-muted/50';\n    }\n  };\n\n  // Reusable Scan Area Component\n  const ScanArea = ({\n    scanIndex,\n    title,\n    scannedImage,\n    isScanning,\n    formDataScan,\n    fileInputRef,\n  }: {\n    scanIndex: 1 | 2;\n    title: string;\n    scannedImage: string | null;\n    isScanning: boolean;\n    formDataScan: ScanData;\n    fileInputRef: React.RefObject<HTMLInputElement>;\n  }) => (\n    <div className=\"space-y-4 border p-4 rounded-lg shadow-sm bg-card\">\n      <h3 className=\"text-lg font-semibold text-foreground mb-2 border-b pb-2\">{title}</h3>\n      <div className=\"relative aspect-video w-full bg-muted rounded-md overflow-hidden border border-dashed flex items-center justify-center\">\n        {isScanning ? (\n          <div className=\"flex flex-col items-center text-muted-foreground\">\n            <Loader2 className=\"h-12 w-12 animate-spin mb-2\" />\n            <p>Taranıyor...</p>\n          </div>\n        ) : scannedImage ? (\n          <Image\n            src={scannedImage}\n            alt={`Taranan Görsel ${scanIndex}`}\n            layout=\"fill\"\n            objectFit=\"contain\"\n            data-ai-hint=\"vehicle identification plate license\"\n          />\n        ) : (\n          <div className=\"flex flex-col items-center text-muted-foreground p-4 text-center\">\n            <ScanLine className=\"h-12 w-12 mb-2\" />\n            <p>Görsel {scanIndex} yükleyin.</p>\n          </div>\n        )}\n      </div>\n      <div className=\"flex flex-col sm:flex-row gap-2\">\n        <Button\n          onClick={() => triggerFileInput(scanIndex)}\n          disabled={isScanning}\n          className=\"flex-1 bg-primary hover:bg-primary/90 text-primary-foreground\"\n        >\n          <Camera className=\"mr-2 h-4 w-4\" />\n          Görsel {scanIndex} Seç/Değiştir\n        </Button>\n        <Button\n          onClick={() => handleManualScan(scanIndex)}\n          disabled={isScanning || !scannedImage}\n          variant=\"secondary\"\n          className=\"flex-1\"\n        >\n          {isScanning ? (\n            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n          ) : (\n            <Search className=\"mr-2 h-4 w-4\" />\n          )}\n          {isScanning ? 'Taranıyor...' : `Görsel ${scanIndex} Tara`}\n        </Button>\n      </div>\n       <Input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={(e) => handleImageUpload(e, scanIndex)}\n        className=\"hidden\"\n        id={`license-scan-${scanIndex}`}\n      />\n      {/* Data Fields for this scan area */}\n      <div className=\"space-y-3 mt-4\">\n        {/* Conditional Fields based on scanIndex */}\n        {scanIndex === 1 && (\n          <>\n            <div>\n              <Label htmlFor={`saseNo-${scanIndex}`} className=\"text-sm font-medium text-foreground\">Şase Numarası</Label>\n              <Input\n                id={`saseNo-${scanIndex}`}\n                value={formDataScan.saseNo || ''}\n                onChange={(e) => handleInputChange(e, scanIndex)}\n                placeholder=\"-\"\n                readOnly={isScanning}\n                className=\"mt-1 bg-white read-only:bg-muted/50 read-only:cursor-not-allowed\"\n              />\n            </div>\n            <div>\n              <Label htmlFor={`marka-${scanIndex}`} className=\"text-sm font-medium text-foreground\">Marka</Label>\n              <Input\n                id={`marka-${scanIndex}`}\n                value={formDataScan.marka || ''}\n                onChange={(e) => handleInputChange(e, scanIndex)}\n                placeholder=\"-\"\n                readOnly={isScanning}\n                className=\"mt-1 bg-white read-only:bg-muted/50 read-only:cursor-not-allowed\"\n              />\n            </div>\n          </>\n        )}\n        {scanIndex === 2 && (\n          <>\n             <div>\n              <Label htmlFor={`tipOnayNo-${scanIndex}`} className=\"text-sm font-medium text-foreground\">Tip Onay No</Label>\n              <Input\n                id={`tipOnayNo-${scanIndex}`}\n                value={formDataScan.tipOnayNo || ''}\n                onChange={(e) => handleInputChange(e, scanIndex)}\n                placeholder=\"-\"\n                readOnly={isScanning}\n                className=\"mt-1 bg-white read-only:bg-muted/50 read-only:cursor-not-allowed\"\n              />\n            </div>\n            <div>\n              <Label htmlFor={`varyant-${scanIndex}`} className=\"text-sm font-medium text-foreground\">Varyant</Label>\n              <Input\n                id={`varyant-${scanIndex}`}\n                value={formDataScan.varyant || ''}\n                onChange={(e) => handleInputChange(e, scanIndex)}\n                placeholder=\"-\"\n                readOnly={isScanning}\n                className=\"mt-1 bg-white read-only:bg-muted/50 read-only:cursor-not-allowed\"\n              />\n            </div>\n            <div>\n              <Label htmlFor={`versiyon-${scanIndex}`} className=\"text-sm font-medium text-foreground\">Versiyon</Label>\n              <Input\n                id={`versiyon-${scanIndex}`}\n                value={formDataScan.versiyon || ''}\n                onChange={(e) => handleInputChange(e, scanIndex)}\n                placeholder=\"-\"\n                readOnly={isScanning}\n                className=\"mt-1 bg-white read-only:bg-muted/50 read-only:cursor-not-allowed\"\n              />\n            </div>\n          </>\n        )}\n\n      </div>\n    </div>\n  );\n\n\n  return (\n    <div className=\"flex min-h-screen items-start justify-center bg-gradient-to-br from-background to-muted/60 p-4 sm:p-8\">\n      <Card className=\"w-full max-w-6xl shadow-xl bg-card/80 backdrop-blur-sm\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl font-bold text-center text-primary\">\n            Araç Ruhsat/Etiket Karşılaştırıcı\n          </CardTitle>\n          <CardDescription className=\"text-center text-muted-foreground\">\n            Ruhsat ve etiket fotoğraflarını yükleyerek bilgileri otomatik doldurun ve eşleşip eşleşmediğini kontrol edin.\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n           {/* Grid for Scan Areas */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n             <ScanArea\n                scanIndex={1}\n                title=\"Ruhsat Tarama\" // Updated title\n                scannedImage={scannedImage1}\n                isScanning={isScanning1}\n                formDataScan={formData.scan1}\n                fileInputRef={fileInputRef1}\n             />\n              <ScanArea\n                scanIndex={2}\n                title=\"Etiket Tarama\" // Updated title\n                scannedImage={scannedImage2}\n                isScanning={isScanning2}\n                formDataScan={formData.scan2}\n                fileInputRef={fileInputRef2}\n             />\n          </div>\n\n           <Separator className=\"my-6\" />\n\n          {/* Comparison Result Section */}\n           <div className=\"mt-6 pt-4\">\n              <h3 className=\"text-xl font-semibold text-foreground mb-3 text-center\">Karşılaştırma Sonucu</h3>\n               <div className={`flex items-center justify-center gap-3 p-4 rounded-md border ${getResultBgColor()} transition-colors duration-300`}>\n                  {getResultIcon()}\n                  <span className={`text-lg font-medium ${getResultColor()} transition-colors duration-300`}>{getResultText()}</span>\n              </div>\n               <p className=\"text-xs text-muted-foreground mt-2 text-center h-4\"> {/* Added fixed height */}\n                  {comparisonResult === 'eksik veri' && !isScanning1 && !isScanning2 && \"Karşılaştırma için her iki alandan da veri taranmalıdır.\"}\n                   {comparisonResult === 'bekleniyor' && !isScanning1 && !isScanning2 && !hasScanData(formData.scan1) && !hasScanData(formData.scan2) && \"Başlamak için görselleri yükleyip tarayın.\"}\n                   {(isScanning1 || isScanning2) && \"Taranan veriler karşılaştırılıyor...\"}\n                   {comparisonResult === 'uygun' && !isScanning1 && !isScanning2 && \"Ruhsat ve Etiket bilgileri eşleşiyor.\"}\n                   {comparisonResult === 'uygun değil' && !isScanning1 && !isScanning2 && \"Ruhsat ve Etiket bilgileri eşleşmiyor!\"}\n               </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAIA;AACA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA,yOAAuD,mBAAmB;AArB1E;;;;;;;;;;;;AAkCA,kCAAkC;AAClC,MAAM,kBAA4B;IAChC,QAAQ;IACR,OAAO;IACP,WAAW;IACX,SAAS;IACT,UAAU;AACZ;AAEA,0CAA0C;AAC1C,MAAM,kBAA4B;IAChC,OAAO;QAAE,GAAG,eAAe;IAAC;IAC5B,OAAO;QAAE,GAAG,eAAe;IAAC;AAC9B;AAIe,SAAS;IACtB,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY;IACnD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClE,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAiB;IAClE,MAAM,CAAC,kBAAkB,oBAAoB,GAC3C,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAoB;IAC7B,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,4HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAC/C,MAAM,gBAAgB,CAAA,GAAA,qMAAA,CAAA,SAAM,AAAD,EAAoB;IAE/C,wCAAwC;IACxC,MAAM,cAAc,CAAC;QACjB,+DAA+D;QAC/D,OAAO,CAAC,CAAC,KAAK,MAAM,IAAI,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,CAAC,KAAK,SAAS,IAAI,CAAC,CAAC,KAAK,OAAO,IAAI,CAAC,CAAC,KAAK,QAAQ;IACjG;IAEA,MAAM,oBAAoB,CAAC,GAAkC;QAC3D,MAAM,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,MAAM;QAC9B,MAAM,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC,EAAE,WAAW,EAAE,KAAK,6BAA6B;QAChF,YAAY,CAAA,WAAY,CAAC;gBACvB,GAAG,QAAQ;gBACX,CAAC,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE;oBACpB,GAAG,QAAQ,CAAC,CAAC,IAAI,EAAE,WAAW,CAAC;oBAC/B,CAAC,UAAU,EAAE;gBACf;YACF,CAAC;IACH;IAEA,MAAM,oBAAoB,OAAO,GAAkC;QACjE,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE;QAChC,IAAI,CAAC,MAAM;QAEX,MAAM,gBAAgB,cAAc,IAAI,iBAAiB;QACzD,MAAM,kBAAkB,cAAc,IAAI,mBAAmB;QAC7D,MAAM,eAAe,cAAc,IAAI,gBAAgB;QAEvD,mDAAmD;QACnD,cAAc;QACd,gBAAgB;QAChB,YAAY,CAAA,WAAY,CAAC;gBACrB,GAAG,QAAQ;gBACX,CAAC,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE;oBAAE,GAAG,eAAe;gBAAC;YAC/C,CAAC;QACD,oBAAoB,eAAe,gDAAgD;QAEnF,MAAM,SAAS,IAAI;QACnB,OAAO,aAAa,CAAC;QACrB,OAAO,MAAM,GAAG;YACd,MAAM,cAAc,OAAO,MAAM;YACjC,gBAAgB;YAChB,MAAM;gBACJ,OAAO,CAAC,OAAO,EAAE,UAAU,SAAS,CAAC;gBACrC,aAAa,CAAC,+BAA+B,EAAE,UAAU,yBAAyB,CAAC;YACrF;QACF;QACA,OAAO,OAAO,GAAG,CAAA;YACf,QAAQ,KAAK,CAAC,uBAAuB;YACrC,MAAM;gBACJ,OAAO;gBACP,aAAa,CAAC,OAAO,EAAE,UAAU,mCAAmC,CAAC;gBACrE,SAAS;YACX;YACA,gBAAgB;YAChB,YAAY,CAAA,WAAY,CAAC;oBACvB,GAAG,QAAQ;oBACX,CAAC,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE;wBAAE,GAAG,eAAe;oBAAC;gBAC7C,CAAC;YACD,oBAAoB;QACtB;QAEA,6BAA6B;QAC7B,IAAI,aAAa,OAAO,EAAE;YACxB,aAAa,OAAO,CAAC,KAAK,GAAG;QAC/B;IACF;IAEA,MAAM,mBAAmB,OAAO;QAC9B,MAAM,eAAe,cAAc,IAAI,gBAAgB;QACvD,MAAM,gBAAgB,cAAc,IAAI,iBAAiB;QACzD,MAAM,aAAa,cAAc,IAAI,cAAc,aAAa,6BAA6B;QAE7F,IAAI,YAAY,QAAQ,8CAA8C;QAEtE,IAAI,CAAC,cAAc;YACjB,MAAM;gBACJ,OAAO,CAAC,OAAO,EAAE,UAAU,IAAI,CAAC;gBAChC,aAAa,CAAC,yBAAyB,EAAE,UAAU,mBAAmB,CAAC;gBACvE,SAAS;YACX;YACA;QACF;QAEA,cAAc;QACd,YAAY,CAAA,WAAY,CAAC;gBACrB,GAAG,QAAQ;gBACX,CAAC,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE;oBAAE,GAAG,eAAe;gBAAC,EAAE,gCAAgC;YACjF,CAAC;QACD,oBAAoB,eAAe,+BAA+B;QAElE,IAAI;YACF,MAAM,SAAS,MAAM,CAAA,GAAA,mKAAA,CAAA,gCAA6B,AAAD,EAAE;gBACjD,qBAAqB;YACvB;YAEA,4CAA4C;YAC5C,0CAA0C;YAC1C,YAAY,CAAA,WAAY,CAAC;oBACvB,GAAG,QAAQ;oBACX,CAAC,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE;wBACpB,QAAQ,OAAO,MAAM,IAAI;wBACzB,OAAO,OAAO,KAAK,IAAI;wBACvB,WAAW,OAAO,SAAS,IAAI;wBAC/B,SAAS,OAAO,OAAO,IAAI;wBAC3B,UAAU,OAAO,QAAQ,IAAI;oBAC/B;gBACF,CAAC;YAED,MAAM;gBACJ,OAAO,CAAC,OAAO,EAAE,UAAU,SAAS,CAAC;gBACrC,aAAa,CAAC,cAAc,EAAE,UAAU,6BAA6B,CAAC;YACxE;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,CAAC,+BAA+B,EAAE,UAAU,CAAC,CAAC,EAAE;YAC9D,MAAM;gBACJ,OAAO,CAAC,OAAO,EAAE,UAAU,OAAO,CAAC;gBACnC,aAAa,CAAC,cAAc,EAAE,UAAU,kEAAkE,CAAC;gBAC3G,SAAS;YACX;YACC,YAAY,CAAA,WAAY,CAAC;oBACxB,GAAG,QAAQ;oBACX,CAAC,CAAC,IAAI,EAAE,WAAW,CAAC,EAAE;wBAAE,GAAG,eAAe;oBAAC,EAAE,sBAAsB;gBACrE,CAAC;QACH,SAAU;YACR,cAAc;QAChB;IACF;IAEA,MAAM,mBAAmB,CAAC;QACxB,MAAM,eAAe,cAAc,IAAI,gBAAgB;QACvD,aAAa,OAAO,EAAE;IACxB;IAEA,MAAM,cAAc,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QAC9B,MAAM,YAAY,SAAS,KAAK;QAChC,MAAM,YAAY,SAAS,KAAK;QAChC,MAAM,aAAa,eAAe;QAElC,yEAAyE;QACzE,uEAAuE;QACvE,mFAAmF;QACnF,MAAM,uBAAuB,CAAC,CAAC,UAAU,MAAM,IAAI,CAAC,CAAC,UAAU,KAAK;QACpE,MAAM,uBAAuB,CAAC,CAAC,UAAU,SAAS,IAAI,CAAC,CAAC,UAAU,OAAO,IAAI,CAAC,CAAC,UAAU,QAAQ;QACjG,MAAM,mBAAmB,YAAY,cAAc,YAAY;QAG/D,IAAI,YAAY;YACZ,oBAAoB;YACpB;QACJ;QAEA,kFAAkF;QAClF,IAAI,CAAC,kBAAkB;YAClB,yGAAyG;YAC1G,oBAAoB;YACpB;QACJ;QAGA,6CAA6C;QAC7C,+FAA+F;QAC/F,MAAM,UACJ,UAAU,MAAM,KAAK,UAAU,MAAM,IACrC,UAAU,KAAK,KAAK,UAAU,KAAK,IACnC,UAAU,SAAS,KAAK,UAAU,SAAS,IAC3C,UAAU,OAAO,KAAK,UAAU,OAAO,IACvC,UAAU,QAAQ,KAAK,UAAU,QAAQ;QAE3C,oBAAoB,UAAU,UAAU;IAC1C,GAAG;QAAC;QAAU;QAAa;KAAY;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,yEAAyE;QACxE,IAAI,CAAC,eAAe,CAAC,aAAa;YACjC;QACF;IACF,GAAG;QAAC;QAAU;QAAa;QAAa;KAAY;IAGpD,MAAM,gBAAgB;QACpB,MAAM,aAAa,eAAe;QACjC,IAAI,YAAY,qBAAO,8OAAC,iNAAA,CAAA,UAAO;YAAC,WAAU;;;;;;QAE3C,OAAQ;YACN,KAAK;gBACH,qBAAO,8OAAC,2NAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;YAChC,KAAK;gBACH,qBAAO,8OAAC,4MAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;YAC3B,KAAK;gBACH,qBAAO,8OAAC,8MAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;0BAA8B,mCAAmC;YAC/F;gBACE,qBAAO,8OAAC,8MAAA,CAAA,WAAQ;oBAAC,WAAU;;;;;;QAC/B;IACF;IAEA,MAAM,gBAAgB;QACnB,MAAM,aAAa,eAAe;QAClC,IAAI,YAAY,OAAO;QAExB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACT,KAAK;gBACF,OAAO;YACV;gBACE,OAAO;QACX;IACF;IAEA,MAAM,iBAAiB;QACpB,MAAM,aAAa,eAAe;QAClC,IAAI,YAAY,OAAO;QAExB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACR,KAAK;gBACH,OAAO;YACV;gBACE,OAAO;QACX;IACF;IAEC,MAAM,mBAAmB;QACxB,MAAM,aAAa,eAAe;QACjC,IAAI,YAAY,OAAO;QAExB,OAAQ;YACN,KAAK;gBACH,OAAO;YACT,KAAK;gBACH,OAAO;YACR,KAAK;gBACH,OAAO;YACV;gBACE,OAAO;QACX;IACF;IAEA,+BAA+B;IAC/B,MAAM,WAAW,CAAC,EAChB,SAAS,EACT,KAAK,EACL,YAAY,EACZ,UAAU,EACV,YAAY,EACZ,YAAY,EAQb,iBACC,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAG,WAAU;8BAA4D;;;;;;8BAC1E,8OAAC;oBAAI,WAAU;8BACZ,2BACC,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,iNAAA,CAAA,UAAO;gCAAC,WAAU;;;;;;0CACnB,8OAAC;0CAAE;;;;;;;;;;;+BAEH,6BACF,8OAAC,6HAAA,CAAA,UAAK;wBACJ,KAAK;wBACL,KAAK,CAAC,eAAe,EAAE,WAAW;wBAClC,QAAO;wBACP,WAAU;wBACV,gBAAa;;;;;6CAGf,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,8MAAA,CAAA,WAAQ;gCAAC,WAAU;;;;;;0CACpB,8OAAC;;oCAAE;oCAAQ;oCAAU;;;;;;;;;;;;;;;;;;8BAI3B,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,kIAAA,CAAA,SAAM;4BACL,SAAS,IAAM,iBAAiB;4BAChC,UAAU;4BACV,WAAU;;8CAEV,8OAAC,sMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;gCAAiB;gCAC3B;gCAAU;;;;;;;sCAEpB,8OAAC,kIAAA,CAAA,SAAM;4BACL,SAAS,IAAM,iBAAiB;4BAChC,UAAU,cAAc,CAAC;4BACzB,SAAQ;4BACR,WAAU;;gCAET,2BACC,8OAAC,iNAAA,CAAA,UAAO;oCAAC,WAAU;;;;;yDAEnB,8OAAC,sMAAA,CAAA,SAAM;oCAAC,WAAU;;;;;;gCAEnB,aAAa,iBAAiB,CAAC,OAAO,EAAE,UAAU,KAAK,CAAC;;;;;;;;;;;;;8BAG5D,8OAAC,iIAAA,CAAA,QAAK;oBACL,KAAK;oBACL,MAAK;oBACL,QAAO;oBACP,UAAU,CAAC,IAAM,kBAAkB,GAAG;oBACtC,WAAU;oBACV,IAAI,CAAC,aAAa,EAAE,WAAW;;;;;;8BAGjC,8OAAC;oBAAI,WAAU;;wBAEZ,cAAc,mBACb;;8CACE,8OAAC;;sDACC,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAS,CAAC,OAAO,EAAE,WAAW;4CAAE,WAAU;sDAAsC;;;;;;sDACvF,8OAAC,iIAAA,CAAA,QAAK;4CACJ,IAAI,CAAC,OAAO,EAAE,WAAW;4CACzB,OAAO,aAAa,MAAM,IAAI;4CAC9B,UAAU,CAAC,IAAM,kBAAkB,GAAG;4CACtC,aAAY;4CACZ,UAAU;4CACV,WAAU;;;;;;;;;;;;8CAGd,8OAAC;;sDACC,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAS,CAAC,MAAM,EAAE,WAAW;4CAAE,WAAU;sDAAsC;;;;;;sDACtF,8OAAC,iIAAA,CAAA,QAAK;4CACJ,IAAI,CAAC,MAAM,EAAE,WAAW;4CACxB,OAAO,aAAa,KAAK,IAAI;4CAC7B,UAAU,CAAC,IAAM,kBAAkB,GAAG;4CACtC,aAAY;4CACZ,UAAU;4CACV,WAAU;;;;;;;;;;;;;;wBAKjB,cAAc,mBACb;;8CACG,8OAAC;;sDACA,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAS,CAAC,UAAU,EAAE,WAAW;4CAAE,WAAU;sDAAsC;;;;;;sDAC1F,8OAAC,iIAAA,CAAA,QAAK;4CACJ,IAAI,CAAC,UAAU,EAAE,WAAW;4CAC5B,OAAO,aAAa,SAAS,IAAI;4CACjC,UAAU,CAAC,IAAM,kBAAkB,GAAG;4CACtC,aAAY;4CACZ,UAAU;4CACV,WAAU;;;;;;;;;;;;8CAGd,8OAAC;;sDACC,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAS,CAAC,QAAQ,EAAE,WAAW;4CAAE,WAAU;sDAAsC;;;;;;sDACxF,8OAAC,iIAAA,CAAA,QAAK;4CACJ,IAAI,CAAC,QAAQ,EAAE,WAAW;4CAC1B,OAAO,aAAa,OAAO,IAAI;4CAC/B,UAAU,CAAC,IAAM,kBAAkB,GAAG;4CACtC,aAAY;4CACZ,UAAU;4CACV,WAAU;;;;;;;;;;;;8CAGd,8OAAC;;sDACC,8OAAC,iIAAA,CAAA,QAAK;4CAAC,SAAS,CAAC,SAAS,EAAE,WAAW;4CAAE,WAAU;sDAAsC;;;;;;sDACzF,8OAAC,iIAAA,CAAA,QAAK;4CACJ,IAAI,CAAC,SAAS,EAAE,WAAW;4CAC3B,OAAO,aAAa,QAAQ,IAAI;4CAChC,UAAU,CAAC,IAAM,kBAAkB,GAAG;4CACtC,aAAY;4CACZ,UAAU;4CACV,WAAU;;;;;;;;;;;;;;;;;;;;;;;;;;IAWxB,qBACE,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC,gIAAA,CAAA,OAAI;YAAC,WAAU;;8BACd,8OAAC,gIAAA,CAAA,aAAU;;sCACT,8OAAC,gIAAA,CAAA,YAAS;4BAAC,WAAU;sCAA8C;;;;;;sCAGnE,8OAAC,gIAAA,CAAA,kBAAe;4BAAC,WAAU;sCAAoC;;;;;;;;;;;;8BAIjE,8OAAC,gIAAA,CAAA,cAAW;oBAAC,WAAU;;sCAErB,8OAAC;4BAAI,WAAU;;8CACZ,8OAAC;oCACE,WAAW;oCACX,OAAM,gBAAgB,gBAAgB;;oCACtC,cAAc;oCACd,YAAY;oCACZ,cAAc,SAAS,KAAK;oCAC5B,cAAc;;;;;;8CAEhB,8OAAC;oCACC,WAAW;oCACX,OAAM,gBAAgB,gBAAgB;;oCACtC,cAAc;oCACd,YAAY;oCACZ,cAAc,SAAS,KAAK;oCAC5B,cAAc;;;;;;;;;;;;sCAInB,8OAAC,qIAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;sCAGrB,8OAAC;4BAAI,WAAU;;8CACZ,8OAAC;oCAAG,WAAU;8CAAyD;;;;;;8CACtE,8OAAC;oCAAI,WAAW,CAAC,6DAA6D,EAAE,mBAAmB,+BAA+B,CAAC;;wCAC/H;sDACD,8OAAC;4CAAK,WAAW,CAAC,oBAAoB,EAAE,iBAAiB,+BAA+B,CAAC;sDAAG;;;;;;;;;;;;8CAE/F,8OAAC;oCAAE,WAAU;;wCAAqD;wCAC9D,qBAAqB,gBAAgB,CAAC,eAAe,CAAC,eAAe;wCACpE,qBAAqB,gBAAgB,CAAC,eAAe,CAAC,eAAe,CAAC,YAAY,SAAS,KAAK,KAAK,CAAC,YAAY,SAAS,KAAK,KAAK;wCACrI,CAAC,eAAe,WAAW,KAAK;wCAChC,qBAAqB,WAAW,CAAC,eAAe,CAAC,eAAe;wCAChE,qBAAqB,iBAAiB,CAAC,eAAe,CAAC,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO1F","debugId":null}}]
}
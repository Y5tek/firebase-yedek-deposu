{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 213, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/extract-data-from-vehicle-license.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview This file defines a Genkit flow for extracting data from a vehicle license or tag image using OCR and a large language model.\n *\n * - extractDataFromVehicleLicense - A function that accepts an image of a vehicle license/tag and returns the extracted data.\n * - ExtractDataFromVehicleLicenseInput - The input type for the extractDataFromVehicleLicense function, which is a data URI of the image.\n * - ExtractDataFromVehicleLicenseOutput - The output type for the extractDataFromVehicleLicense function, including saseNo, marka, tipOnayNo, varyant, and versiyon.\n */\n\nimport {ai} from '@/ai/ai-instance';\nimport {z} from 'genkit';\n\nconst ExtractDataFromVehicleLicenseInputSchema = z.object({\n  licenseImageDataUri: z\n    .string()\n    .describe(\n      'A photo of a vehicle license or tag, as a data URI that must include a MIME type and use Base64 encoding. Expected format: \\'data:<mimetype>;base64,<encoded_data>\\'.'\n    ),\n});\n\nexport type ExtractDataFromVehicleLicenseInput = z.infer<typeof ExtractDataFromVehicleLicenseInputSchema>;\n\n// Output schema remains the same, containing all possible fields.\nconst ExtractDataFromVehicleLicenseOutputSchema = z.object({\n  saseNo: z.string().optional().describe('Şase Numarası (VIN)'),\n  marka: z.string().optional().describe('Marka'),\n  tipOnayNo: z.string().optional().describe('Tip Onay Numarası'),\n  varyant: z.string().optional().describe('Varyant'),\n  versiyon: z.string().optional().describe('Versiyon'),\n});\n\nexport type ExtractDataFromVehicleLicenseOutput = z.infer<typeof ExtractDataFromVehicleLicenseOutputSchema>;\n\n// This function serves as the public API for the flow\nexport async function extractDataFromVehicleLicense(\n  input: ExtractDataFromVehicleLicenseInput\n): Promise<ExtractDataFromVehicleLicenseOutput> {\n  return extractDataFromVehicleLicenseFlow(input);\n}\n\n// Define the prompt for the AI model\n// The prompt asks for *all* fields, letting the model decide what's available in the image.\nconst prompt = ai.definePrompt({\n  name: 'extractDataFromVehicleLicensePrompt',\n  input: {\n    schema: ExtractDataFromVehicleLicenseInputSchema, // Use the same input schema\n  },\n  output: {\n    schema: ExtractDataFromVehicleLicenseOutputSchema, // Use the same output schema\n  },\n  prompt: `Aşağıdaki araç ruhsatı VEYA etiketi görselinden Şase Numarası, Marka, Tip Onay Numarası, Varyant ve Versiyon bilgilerini çıkar. Hangi bilginin hangi tür belgede (ruhsat/etiket) bulunduğunu dikkate almadan, görselde bulabildiğin tüm bu alanları doldur. Eğer bir bilgi görselde bulunmuyorsa ilgili alanı boş bırak veya null olarak döndür.\n\n   Araç Görseli: {{media url=licenseImageDataUri}}\n  `,\n});\n\n// Define the Genkit flow\nconst extractDataFromVehicleLicenseFlow = ai.defineFlow<\n  typeof ExtractDataFromVehicleLicenseInputSchema,\n  typeof ExtractDataFromVehicleLicenseOutputSchema\n>({\n  name: 'extractDataFromVehicleLicenseFlow',\n  inputSchema: ExtractDataFromVehicleLicenseInputSchema,\n  outputSchema: ExtractDataFromVehicleLicenseOutputSchema,\n},\nasync input => {\n  // Directly generate the response using the defined prompt and the input image\n  // Genkit 1.x: Call the prompt function directly with the input\n  const response = await prompt(input);\n\n\n  // Genkit 1.x: Access the output property directly\n  return response.output || { // Provide default empty object if output is null/undefined\n      saseNo: '',\n      marka: '',\n      tipOnayNo: '',\n      varyant: '',\n      versiyon: '',\n    };\n});\n\n"],"names":[],"mappings":";;;;;IAoCsB","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/separator.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n\n"],"names":[],"mappings":";;;;AAGA;AACA;AAEA;AALA;;;;;AAOA,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI/B,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,6LAAC,wKAAA,CAAA,OAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;;AAIf,UAAU,WAAW,GAAG,wKAAA,CAAA,OAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 302, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/data/approval-data.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Define the schema for a single approval entry using Zod\nexport const approvalSchema = z.object({\n  marka: z.string().min(1, { message: \"Marka alanı boş olamaz.\" }),\n  tipOnayNo: z.string().min(1, { message: \"Tip Onay No alanı boş olamaz.\" }),\n  varyant: z.string().min(1, { message: \"Varyant alanı boş olamaz.\" }),\n  versiyon: z.string().min(1, { message: \"Versiyon alanı boş olamaz.\" }),\n  seriTadilatTipOnayi: z.string().min(1, { message: \"Seri Tadilat Tip Onayı alanı boş olamaz.\" }), // Added new field\n});\n\nexport type ApprovalFormData = z.infer<typeof approvalSchema>;\n\n// This is the list used for comparison on the main page\n// and the initial data for the management page.\nexport const initialApprovalData: ApprovalFormData[] = [\n  { marka: \"Marka A\", tipOnayNo: \"A123\", varyant: \"Varyant X\", versiyon: \"1.0\", seriTadilatTipOnayi: \"STTO-A1\" }, // Added new field data\n  { marka: \"Marka B\", tipOnayNo: \"B456\", varyant: \"Varyant Y\", versiyon: \"2.1\", seriTadilatTipOnayi: \"STTO-B2\" }, // Added new field data\n  { marka: \"Marka C\", tipOnayNo: \"C789\", varyant: \"Varyant Z\", versiyon: \"3.0\", seriTadilatTipOnayi: \"STTO-C3\" }, // Added new field data\n  { marka: \"Marka A\", tipOnayNo: \"A124\", varyant: \"Varyant X\", versiyon: \"1.1\", seriTadilatTipOnayi: \"STTO-A4\" }, // Added new field data\n];\n"],"names":[],"mappings":";;;;AACA;;AAGO,MAAM,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACrC,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAA0B;IAC9D,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAAgC;IACxE,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAA4B;IAClE,UAAU,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAA6B;IACpE,qBAAqB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG;QAAE,SAAS;IAA2C;AAC/F;AAMO,MAAM,sBAA0C;IACrD;QAAE,OAAO;QAAW,WAAW;QAAQ,SAAS;QAAa,UAAU;QAAO,qBAAqB;IAAU;IAC7G;QAAE,OAAO;QAAW,WAAW;QAAQ,SAAS;QAAa,UAAU;QAAO,qBAAqB;IAAU;IAC7G;QAAE,OAAO;QAAW,WAAW;QAAQ,SAAS;QAAa,UAAU;QAAO,qBAAqB;IAAU;IAC7G;QAAE,OAAO;QAAW,WAAW;QAAQ,SAAS;QAAa,UAAU;QAAO,qBAAqB;IAAU;CAC9G","debugId":null}},
    {"offset": {"line": 364, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx"],"sourcesContent":["\n'use client';\n\nimport type { ChangeEvent } from 'react';\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport Link from 'next/link'; // Import Link\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Camera, CheckCircle, XCircle, Loader2, ScanLine, Search, FileCheck, ArrowLeft } from 'lucide-react'; // Import FileCheck and ArrowLeft icons\nimport {\n  extractDataFromVehicleLicense,\n  type ExtractDataFromVehicleLicenseOutput,\n} from '@/ai/flows/extract-data-from-vehicle-license';\nimport { useToast } from '@/hooks/use-toast';\nimport Image from 'next/image';\nimport { Separator } from '@/components/ui/separator';\nimport { initialApprovalData, type ApprovalFormData } from '@/data/approval-data'; // Import shared data\n\n// Interface for data from a single scan\ninterface ScanData extends ExtractDataFromVehicleLicenseOutput {\n  [key: string]: string | undefined;\n}\n\n// Updated FormData interface to hold data for two scans\ninterface FormData {\n  scan1: ScanData;\n  scan2: ScanData;\n}\n\n// Initial state for a single scan\nconst initialScanData: ScanData = {\n  saseNo: '',\n  marka: '',\n  tipOnayNo: '',\n  varyant: '',\n  versiyon: '',\n};\n\n// Updated initial form data for two scans\nconst initialFormData: FormData = {\n  scan1: { ...initialScanData },\n  scan2: { ...initialScanData },\n};\n\ntype ComparisonResultStatus = 'uygun' | 'uygun değil' | 'bekleniyor' | 'eksik veri';\n\n// Updated comparison result state to include matching seri tadilat tip onayi\ninterface ComparisonResult {\n    status: ComparisonResultStatus;\n    matchingSeriTadilatTipOnayi?: string | null; // Changed from matchingTipOnayNo\n}\n\n// Helper function to get placeholder text based on scan area - Moved outside Home\nconst getPlaceholder = (fieldName: keyof ScanData, scanIndex: 1 | 2) => {\n    const defaultPlaceholders: Record<keyof ScanData, string> = {\n        saseNo: \"Şase Numarası Girin\",\n        marka: \"Marka Girin\",\n        tipOnayNo: \"Tip Onay No Girin\",\n        varyant: \"Varyant Girin\",\n        versiyon: \"Versiyon Girin\",\n    };\n\n    if (scanIndex === 1) {\n        if (fieldName === 'saseNo' || fieldName === 'marka') {\n            return defaultPlaceholders[fieldName];\n        } else {\n            // This field is not expected from Ruhsat, but show placeholder for clarity if needed elsewhere\n             return `${defaultPlaceholders[fieldName]} (Etiketten beklenir)`;\n        }\n    } else { // scanIndex === 2\n        if (fieldName === 'tipOnayNo' || fieldName === 'varyant' || fieldName === 'versiyon') {\n            return defaultPlaceholders[fieldName];\n        } else {\n            // This field is not expected from Etiket, but show placeholder for clarity if needed elsewhere\n            return `${defaultPlaceholders[fieldName]} (Ruhsattan beklenir)`;\n        }\n    }\n}\n\n\n// Reusable Scan Area Component - Moved outside Home\nconst ScanArea = ({\n    scanIndex,\n    title,\n    scannedImage,\n    isScanning,\n    formDataScan,\n    fileInputRef,\n    triggerFileInput,\n    handleImageUpload,\n    handleManualScan,\n    handleInputChange,\n  }: {\n    scanIndex: 1 | 2;\n    title: string;\n    scannedImage: string | null;\n    isScanning: boolean;\n    formDataScan: ScanData;\n    fileInputRef: React.RefObject<HTMLInputElement>;\n    triggerFileInput: (scanIndex: 1 | 2) => void;\n    handleImageUpload: (e: ChangeEvent<HTMLInputElement>, scanIndex: 1 | 2) => void;\n    handleManualScan: (scanIndex: 1 | 2) => void;\n    handleInputChange: (e: ChangeEvent<HTMLInputElement>, scanIndex: 1 | 2) => void;\n  }) => (\n    <div className=\"space-y-4 border p-4 rounded-lg shadow-sm bg-card\">\n      <h3 className=\"text-lg font-semibold text-foreground mb-2 border-b pb-2\">{title}</h3>\n      <div className=\"relative aspect-video w-full bg-muted rounded-md overflow-hidden border border-dashed flex items-center justify-center\">\n        {isScanning ? (\n          <div className=\"flex flex-col items-center text-muted-foreground\">\n            <Loader2 className=\"h-12 w-12 animate-spin mb-2\" />\n            <p>Taranıyor...</p>\n          </div>\n        ) : scannedImage ? (\n          <Image\n            src={scannedImage}\n            alt={`Taranan Görsel ${scanIndex}`}\n            layout=\"fill\"\n            objectFit=\"contain\"\n            data-ai-hint=\"vehicle identification plate license\"\n          />\n        ) : (\n          <div className=\"flex flex-col items-center text-muted-foreground p-4 text-center\">\n            <ScanLine className=\"h-12 w-12 mb-2\" />\n            <p>Görsel {scanIndex} yükleyin.</p>\n          </div>\n        )}\n      </div>\n      <div className=\"flex flex-col sm:flex-row gap-2\">\n        <Button\n          onClick={() => triggerFileInput(scanIndex)}\n          disabled={isScanning}\n          className=\"flex-1 bg-primary hover:bg-primary/90 text-primary-foreground\"\n        >\n          <Camera className=\"mr-2 h-4 w-4\" />\n          Görsel {scanIndex} Seç/Değiştir\n        </Button>\n        <Button\n          onClick={() => handleManualScan(scanIndex)}\n          disabled={isScanning || !scannedImage}\n          variant=\"secondary\"\n          className=\"flex-1\"\n        >\n          {isScanning ? (\n            <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n          ) : (\n            <Search className=\"mr-2 h-4 w-4\" />\n          )}\n          {isScanning ? 'Taranıyor...' : `Görsel ${scanIndex} Tara`}\n        </Button>\n      </div>\n       <Input\n        ref={fileInputRef}\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={(e) => handleImageUpload(e, scanIndex)}\n        className=\"hidden\"\n        id={`license-scan-${scanIndex}`}\n      />\n      {/* Data Fields for this scan area */}\n      {/* Conditionally render fields based on scanIndex */}\n      <div className=\"space-y-3 mt-4\">\n          {scanIndex === 1 && (\n            <>\n              <div>\n                <Label htmlFor={`saseNo-${scanIndex}`} className=\"text-sm font-medium text-foreground\">Şase Numarası</Label>\n                <Input\n                  id={`saseNo-${scanIndex}`}\n                  name=\"saseNo\" // Ensure name attribute is set\n                  value={formDataScan.saseNo || ''}\n                  onChange={(e) => handleInputChange(e, scanIndex)}\n                  placeholder={getPlaceholder('saseNo', scanIndex)}\n                  className=\"mt-1\"\n                />\n              </div>\n              <div>\n                <Label htmlFor={`marka-${scanIndex}`} className=\"text-sm font-medium text-foreground\">Marka</Label>\n                <Input\n                  id={`marka-${scanIndex}`}\n                  name=\"marka\" // Ensure name attribute is set\n                  value={formDataScan.marka || ''}\n                  onChange={(e) => handleInputChange(e, scanIndex)}\n                  placeholder={getPlaceholder('marka', scanIndex)}\n                  className=\"mt-1\"\n                />\n              </div>\n            </>\n          )}\n          {scanIndex === 2 && (\n            <>\n              <div>\n                <Label htmlFor={`tipOnayNo-${scanIndex}`} className=\"text-sm font-medium text-foreground\">Tip Onay No</Label>\n                <Input\n                  id={`tipOnayNo-${scanIndex}`}\n                  name=\"tipOnayNo\" // Ensure name attribute is set\n                  value={formDataScan.tipOnayNo || ''}\n                  onChange={(e) => handleInputChange(e, scanIndex)}\n                  placeholder={getPlaceholder('tipOnayNo', scanIndex)}\n                   className=\"mt-1\"\n                />\n              </div>\n              <div>\n                <Label htmlFor={`varyant-${scanIndex}`} className=\"text-sm font-medium text-foreground\">Varyant</Label>\n                <Input\n                  id={`varyant-${scanIndex}`}\n                  name=\"varyant\" // Ensure name attribute is set\n                  value={formDataScan.varyant || ''}\n                  onChange={(e) => handleInputChange(e, scanIndex)}\n                  placeholder={getPlaceholder('varyant', scanIndex)}\n                  className=\"mt-1\"\n                />\n              </div>\n              <div>\n                <Label htmlFor={`versiyon-${scanIndex}`} className=\"text-sm font-medium text-foreground\">Versiyon</Label>\n                <Input\n                  id={`versiyon-${scanIndex}`}\n                  name=\"versiyon\" // Ensure name attribute is set\n                  value={formDataScan.versiyon || ''}\n                  onChange={(e) => handleInputChange(e, scanIndex)}\n                  placeholder={getPlaceholder('versiyon', scanIndex)}\n                  className=\"mt-1\"\n                />\n              </div>\n             </>\n          )}\n      </div>\n    </div>\n  );\n\nexport default function Home() {\n  const [formData, setFormData] = useState<FormData>(initialFormData);\n  const [isScanning1, setIsScanning1] = useState(false);\n  const [isScanning2, setIsScanning2] = useState(false);\n  const [scannedImage1, setScannedImage1] = useState<string | null>(null);\n  const [scannedImage2, setScannedImage2] = useState<string | null>(null);\n  // Updated comparison result state initialization\n  const [comparisonResult, setComparisonResult] =\n    useState<ComparisonResult>({ status: 'bekleniyor', matchingSeriTadilatTipOnayi: null }); // Updated property name\n  const { toast } = useToast();\n  const fileInputRef1 = useRef<HTMLInputElement>(null);\n  const fileInputRef2 = useRef<HTMLInputElement>(null);\n\n  // Check if *any* data exists for a given scan\n  const hasAnyScanData = (scan: ScanData): boolean => {\n      return Object.values(scan).some(value => !!value);\n  }\n\n  // Check if all required fields for comparison are present across both scans\n  const hasRequiredComparisonData = (data: FormData): boolean => {\n      const marka = data.scan1.marka || data.scan2.marka;\n      const tipOnayNo = data.scan2.tipOnayNo || data.scan1.tipOnayNo;\n      const varyant = data.scan2.varyant || data.scan1.varyant;\n      const versiyon = data.scan2.versiyon || data.scan1.versiyon;\n      return !!marka && !!tipOnayNo && !!varyant && !!versiyon;\n  }\n\n\n  const handleInputChange = useCallback((e: ChangeEvent<HTMLInputElement>, scanIndex: 1 | 2) => {\n    const { name, value } = e.target; // Use 'name' instead of 'id' for semantic correctness\n    // const fieldName = id.replace(`-${scanIndex}`, ''); // Remove '-1' or '-2' suffix - No longer needed with 'name'\n    setFormData(prevData => ({\n      ...prevData,\n      [`scan${scanIndex}`]: {\n        ...prevData[`scan${scanIndex}`],\n        [name]: value, // Use name directly\n      },\n    }));\n  }, []); // Added empty dependency array\n\n\n  const handleImageUpload = useCallback(async (e: ChangeEvent<HTMLInputElement>, scanIndex: 1 | 2) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n\n    const setIsScanning = scanIndex === 1 ? setIsScanning1 : setIsScanning2;\n    const setScannedImage = scanIndex === 1 ? setScannedImage1 : setScannedImage2;\n    const fileInputRef = scanIndex === 1 ? fileInputRef1 : fileInputRef2;\n\n    // Reset relevant states for the specific scan area\n    setIsScanning(false); // Ensure scanning state is reset\n    setComparisonResult({ status: 'bekleniyor', matchingSeriTadilatTipOnayi: null }); // Reset comparison when a new image is selected\n\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const base64Image = reader.result as string;\n      setScannedImage(base64Image); // Set image preview *after* successful read\n      toast({\n        title: `Görsel ${scanIndex} Yüklendi`,\n        description: `Görsel taramaya hazır. \"Görsel ${scanIndex} Tara\" butonuna tıklayın.`,\n      });\n    };\n    reader.onerror = error => {\n      console.error('Error reading file:', error);\n      toast({\n        title: 'Dosya Okuma Hatası',\n        description: `Görsel ${scanIndex} dosyası okunurken bir hata oluştu.`,\n        variant: 'destructive',\n      });\n      setScannedImage(null); // Clear preview on error\n    };\n\n    // Clear the file input value *after* processing\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }, [toast]); // Add toast as dependency\n\n\n  const handleManualScan = useCallback(async (scanIndex: 1 | 2) => {\n    const scannedImage = scanIndex === 1 ? scannedImage1 : scannedImage2;\n    const setIsScanning = scanIndex === 1 ? setIsScanning1 : setIsScanning2;\n    const isScanning = scanIndex === 1 ? isScanning1 : isScanning2; // Get current scanning state\n\n    if (isScanning) return; // Prevent triggering scan if already scanning\n\n    if (!scannedImage) {\n      toast({\n        title: `Görsel ${scanIndex} Yok`,\n        description: `Lütfen önce taramak için ${scanIndex}. görseli yükleyin.`,\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    setIsScanning(true);\n    setComparisonResult({ status: 'bekleniyor', matchingSeriTadilatTipOnayi: null }); // Reset comparison during scan\n\n    try {\n      const result = await extractDataFromVehicleLicense({\n        licenseImageDataUri: scannedImage,\n      });\n\n      // Merge scanned data with existing data based on scanIndex constraints\n      setFormData(prevData => {\n        const currentScanData = prevData[`scan${scanIndex}`];\n        const updatedScanData = { ...currentScanData }; // Start with current data\n\n        if (scanIndex === 1) { // Ruhsat Tarama - Only SaseNo and Marka\n          if (result.saseNo) updatedScanData.saseNo = result.saseNo;\n          if (result.marka) updatedScanData.marka = result.marka;\n          // Explicitly do not update tipOnayNo, varyant, versiyon from scan 1\n        } else { // scanIndex === 2 (Etiket Tarama) - Only TipOnayNo, Varyant, Versiyon\n          if (result.tipOnayNo) updatedScanData.tipOnayNo = result.tipOnayNo;\n          if (result.varyant) updatedScanData.varyant = result.varyant;\n          if (result.versiyon) updatedScanData.versiyon = result.versiyon;\n           // Explicitly do not update saseNo, marka from scan 2\n        }\n\n        return {\n          ...prevData,\n          [`scan${scanIndex}`]: updatedScanData,\n        };\n      });\n\n\n      toast({\n        title: `Tarama ${scanIndex} Başarılı`,\n        description: `Araç verileri ${scanIndex}. görselden başarıyla okundu ve ilgili alanlar güncellendi.`,\n      });\n    } catch (error) {\n      console.error(`Error extracting data for scan ${scanIndex}:`, error);\n      toast({\n        title: `Tarama ${scanIndex} Hatası`,\n        description: `Araç verileri ${scanIndex}. görselden okunurken bir hata oluştu. Lütfen manuel kontrol edin.`,\n        variant: 'destructive',\n      });\n    } finally {\n      setIsScanning(false);\n    }\n  }, [scannedImage1, scannedImage2, isScanning1, isScanning2, toast]); // Add dependencies\n\n\n  const triggerFileInput = useCallback((scanIndex: 1 | 2) => {\n    const fileInputRef = scanIndex === 1 ? fileInputRef1 : fileInputRef2;\n    fileInputRef.current?.click();\n  }, []); // Added empty dependency array\n\n  // Updated comparison logic\n  const compareData = useCallback(() => {\n    const scan1Data = formData.scan1;\n    const scan2Data = formData.scan2;\n    const isScanning = isScanning1 || isScanning2;\n\n    // Combine data from both scans, preferring non-empty values\n    // Marka preferentially from scan1, others from scan2\n    const combinedData: Partial<ApprovalFormData> = {\n        marka: scan1Data.marka || scan2Data.marka || '',\n        tipOnayNo: scan2Data.tipOnayNo || scan1Data.tipOnayNo || '',\n        varyant: scan2Data.varyant || scan1Data.varyant || '',\n        versiyon: scan2Data.versiyon || scan1Data.versiyon || '',\n    };\n\n    // Wait if scanning is in progress\n    if (isScanning) {\n        setComparisonResult({ status: 'bekleniyor', matchingSeriTadilatTipOnayi: null });\n        return;\n    }\n\n    // Check if we have the *minimum required* data for comparison (Marka + TipOnayNo + Varyant + Versiyon)\n    if (!hasRequiredComparisonData(formData)) {\n        // If scans are done but still missing required data across *both*, mark as eksik veri\n        // Only show 'eksik veri' if at least one scan attempt was made (indicated by an image or some data)\n        if (scannedImage1 || scannedImage2 || hasAnyScanData(scan1Data) || hasAnyScanData(scan2Data)) {\n             setComparisonResult({ status: 'eksik veri', matchingSeriTadilatTipOnayi: null });\n        } else {\n            // If no data scanned yet and no images loaded, stay in bekleniyor state\n            setComparisonResult({ status: 'bekleniyor', matchingSeriTadilatTipOnayi: null });\n        }\n        return;\n    }\n\n    // Find a match in the approved data list\n    const matchingApproval = initialApprovalData.find(approval =>\n        approval.marka.toLowerCase() === combinedData.marka?.toLowerCase() && // Case-insensitive comparison\n        approval.tipOnayNo.toLowerCase() === combinedData.tipOnayNo?.toLowerCase() &&\n        approval.varyant.toLowerCase() === combinedData.varyant?.toLowerCase() &&\n        approval.versiyon.toLowerCase() === combinedData.versiyon?.toLowerCase()\n    );\n\n\n    if (matchingApproval) {\n        // Update to store and display seriTadilatTipOnayi\n        setComparisonResult({ status: 'uygun', matchingSeriTadilatTipOnayi: matchingApproval.seriTadilatTipOnayi });\n    } else {\n        setComparisonResult({ status: 'uygun değil', matchingSeriTadilatTipOnayi: null });\n    }\n\n  }, [formData, isScanning1, isScanning2, scannedImage1, scannedImage2]); // Dependencies remain the same\n\n\n  useEffect(() => {\n    // Compare data whenever formData, scanning state, or image presence changes\n    compareData();\n  }, [formData, isScanning1, isScanning2, scannedImage1, scannedImage2, compareData]);\n\n\n  const getResultIcon = () => {\n    const isScanning = isScanning1 || isScanning2;\n     if (isScanning) return <Loader2 className=\"h-6 w-6 animate-spin text-muted-foreground\" />;\n\n    switch (comparisonResult.status) {\n      case 'uygun':\n        return <CheckCircle className=\"h-6 w-6 text-green-500\" />;\n      case 'uygun değil':\n        return <XCircle className=\"h-6 w-6 text-red-500\" />;\n       case 'eksik veri':\n         return <ScanLine className=\"h-6 w-6 text-yellow-500\" />; // Or another icon for missing data\n      default: // bekleniyor\n        // Only show ScanLine if there's potential for comparison (image loaded or data entered)\n        if (scannedImage1 || scannedImage2 || hasAnyScanData(formData.scan1) || hasAnyScanData(formData.scan2)) {\n            return <ScanLine className=\"h-6 w-6 text-muted-foreground opacity-50\" />;\n        }\n        // Otherwise, show nothing or a placeholder if desired\n        return null; // Or return a default icon like Info or HelpCircle if needed when idle\n    }\n  };\n\n  // Updated function to include matching seri tadilat tip onayi\n  const getResultText = () => {\n     const isScanning = isScanning1 || isScanning2;\n     if (isScanning) return 'Karşılaştırılıyor...';\n\n    switch (comparisonResult.status) {\n      case 'uygun':\n        // Display matching seriTadilatTipOnayi\n        return `Uygun (${comparisonResult.matchingSeriTadilatTipOnayi || 'N/A'})`;\n      case 'uygun değil':\n        return 'Uygun Değil';\n      case 'eksik veri':\n         return 'Eksik Veri';\n      default: // bekleniyor\n         // Show 'bekleniyor' only if there's potential for comparison\n        if (scannedImage1 || scannedImage2 || hasAnyScanData(formData.scan1) || hasAnyScanData(formData.scan2)) {\n           return 'Karşılaştırma Bekleniyor';\n        }\n        // Otherwise, show a prompt to start\n        return 'Başlamak için Veri Girin/Tarayın';\n    }\n  };\n\n\n  const getResultColor = () => {\n     const isScanning = isScanning1 || isScanning2;\n     if (isScanning) return 'text-muted-foreground';\n\n    switch (comparisonResult.status) {\n      case 'uygun':\n        return 'text-green-600';\n      case 'uygun değil':\n        return 'text-red-600';\n       case 'eksik veri':\n         return 'text-yellow-600';\n      default: // bekleniyor\n        return 'text-muted-foreground';\n    }\n  };\n\n   const getResultBgColor = () => {\n    const isScanning = isScanning1 || isScanning2;\n     if (isScanning) return 'border-muted bg-muted/50';\n\n    switch (comparisonResult.status) {\n      case 'uygun':\n        return 'border-green-200 bg-green-50';\n      case 'uygun değil':\n        return 'border-red-200 bg-red-50';\n       case 'eksik veri':\n         return 'border-yellow-200 bg-yellow-50';\n      default: // bekleniyor\n        // Use default muted style if comparison is pending but possible\n        if (scannedImage1 || scannedImage2 || hasAnyScanData(formData.scan1) || hasAnyScanData(formData.scan2)) {\n            return 'border-muted bg-muted/50';\n        }\n        // Use a slightly different style or hide if completely idle\n        return 'border-transparent bg-transparent'; // Example: hide border/bg when idle\n    }\n  };\n\n\n  return (\n    <div className=\"flex min-h-screen items-start justify-center bg-gradient-to-br from-background to-muted/60 p-4 sm:p-8\">\n      <Card className=\"w-full max-w-6xl shadow-xl bg-card/80 backdrop-blur-sm\">\n        <CardHeader>\n          <CardTitle className=\"text-2xl font-bold text-center text-primary\">\n            Araç Ruhsat/Etiket Karşılaştırıcı\n          </CardTitle>\n          <CardDescription className=\"text-center text-muted-foreground\">\n            Ruhsat ve etiket fotoğraflarını yükleyerek bilgileri otomatik doldurun veya manuel girin ve onaylı tip verileriyle eşleşip eşleşmediğini kontrol edin.\n          </CardDescription>\n          {/* Add button linking to the Seri Tadilat Onay page */}\n          <div className=\"flex justify-center mt-4\">\n             <Link href=\"/seri-tadilat-onay\" passHref>\n               <Button variant=\"outline\">\n                 <FileCheck className=\"mr-2 h-4 w-4\" />\n                 Seri Tadilat Tip Onay Veri Yönetimi\n               </Button>\n             </Link>\n           </div>\n        </CardHeader>\n        <CardContent className=\"space-y-6\">\n           {/* Grid for Scan Areas */}\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n             <ScanArea\n                scanIndex={1}\n                title=\"Ruhsat Tarama\" // Updated title\n                scannedImage={scannedImage1}\n                isScanning={isScanning1}\n                formDataScan={formData.scan1}\n                fileInputRef={fileInputRef1}\n                triggerFileInput={triggerFileInput}\n                handleImageUpload={handleImageUpload}\n                handleManualScan={handleManualScan}\n                handleInputChange={handleInputChange} // Pass handler\n             />\n              <ScanArea\n                scanIndex={2}\n                title=\"Etiket Tarama\" // Updated title\n                scannedImage={scannedImage2}\n                isScanning={isScanning2}\n                formDataScan={formData.scan2}\n                fileInputRef={fileInputRef2}\n                triggerFileInput={triggerFileInput}\n                handleImageUpload={handleImageUpload}\n                handleManualScan={handleManualScan}\n                handleInputChange={handleInputChange} // Pass handler\n             />\n          </div>\n\n           <Separator className=\"my-6\" />\n\n          {/* Comparison Result Section */}\n           <div className=\"mt-6 pt-4\">\n              <h3 className=\"text-xl font-semibold text-foreground mb-3 text-center\">Karşılaştırma Sonucu</h3>\n               <div className={`flex items-center justify-center gap-3 p-4 rounded-md border ${getResultBgColor()} transition-colors duration-300 min-h-[68px]`}> {/* Added min-height */}\n                  {getResultIcon()}\n                  <span className={`text-lg font-medium ${getResultColor()} transition-colors duration-300`}>{getResultText()}</span>\n              </div>\n               <p className=\"text-xs text-muted-foreground mt-2 text-center h-8\"> {/* Increased fixed height for longer messages */}\n                   {comparisonResult.status === 'eksik veri' && !isScanning1 && !isScanning2 && \"Karşılaştırma için Marka, Tip Onay No, Varyant ve Versiyon bilgileri gereklidir.\"}\n                   {comparisonResult.status === 'bekleniyor' && !isScanning1 && !isScanning2 && !(scannedImage1 || scannedImage2 || hasAnyScanData(formData.scan1) || hasAnyScanData(formData.scan2)) && \"Başlamak için görselleri yükleyip tarayın veya bilgileri manuel girin.\"}\n                   {(isScanning1 || isScanning2) && \"Taranan veriler karşılaştırılıyor...\"}\n                   {/* Updated explanation text for 'uygun' status */}\n                   {comparisonResult.status === 'uygun' && !isScanning1 && !isScanning2 && `Veriler onaylı seri tadilat tip onayı (${comparisonResult.matchingSeriTadilatTipOnayi || 'N/A'}) ile eşleşiyor.`}\n                   {comparisonResult.status === 'uygun değil' && !isScanning1 && !isScanning2 && \"Girilen/Taranan veriler herhangi bir onaylı tip ile eşleşmiyor!\"}\n               </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}